February 14, 2015:

Code for enumerating funcstructs of a given cycle type.

def partition_funcstructs(n, cycletype):
    y, d = cycletype.split()
    treenodes = n - sum(d)
    for composition in weak_compositions(treenodes, len(y)):
        for struct in composition_bundles(composition):
            yield struct

def composition_bundles_bundles(component):
    seed = [0]*len(composition)
    for component in composition:
        seed[I]=component_necklaces(component)
    for bundle in product(*seed):
        return bundle

def component_necklaces(component):
    for part in partitions_upto_component(component, d[I]):
        for forest in partition_forests(part):
            for cycle in necklaces(forest):
                yield cycle
        
# def partition_funcstructs(n, cycletype):
#     y, d = cycletype.split()
#     treenodes = n - sum(d)
#     for part in weak_compositions(treenodes, len(y)):
#         for component in composition:
#             for part in partitions_upto(component, d[I]):
#                 for forest in partition_forests(part):
#                     for cycle in necklaces(forest):
#                         funcstruct.append(cycle)
